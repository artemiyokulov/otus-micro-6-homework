helmDefaults:
  wait: true
  waitForJobs: true
  historyMax: 3
  createNamespace: true

repositories:
  - name: bitnami
    url: https://charts.bitnami.com/bitnami
  - name: ingress-nginx
    url: https://kubernetes.github.io/ingress-nginx
  - name: oauth2-proxy
    url: https://oauth2-proxy.github.io/manifests
  - name: opa
    url: https://open-policy-agent.github.io/kube-mgmt/charts


releases:
  - name: prometheus-operator
    chart: bitnami/kube-prometheus
    version: 8.0.1
    namespace: kube-system
    installed: false
    values:
      - prometheus:
          ingress:
            enabled: true
            pathType: Prefix
            hostname: prom.localhost
            path: /
            ingressClassName: nginx
  - name: ingress-nginx
    chart: ingress-nginx/ingress-nginx
    version: 4.1.1
    namespace: kube-system
    needs:
      - kube-system/prometheus-operator
    values:
      - controller:
          metrics:
            enabled: false
            serviceMonitor:
              additionalLabels:
                release: prometheus
              enabled: false
        exporters:
          kube-state-metrics:
            enabled: true
        kubelet:
          enabled: true

  - name: grafana
    chart: bitnami/grafana
    version: 7.9.4
    namespace: kube-system
    installed: false
    needs:
      - kube-system/ingress-nginx
    values:
      - values/grafana.yaml.gotmpl
      - ingress:
          enabled: true
          pathType: Prefix
          hostname: grafana.localhost
          path: /
          ingressClassName: nginx
        config:
          useGrafanaIniFile: true
          grafanaIniConfigMap: grafanaconfig
        admin:
          user: admin
          password: admin
        datasources:
          secretName: grafana-datasources
        dashboardsProvider:
          enabled: true
        dashboardsConfigMaps:
          - configMapName: grafana-dashboard
            fileName: dashboard.json
  - name: postgresql
    version: 11.6.3
    chart: bitnami/postgresql
    namespace: default
    needs:
      - kube-system/prometheus-operator
    values:
      - fullnameOverride: "db"
        auth:
          postgresPassword: ololo
          database: homework
        metrics:
          enabled: false
          serviceMonitor:
            enabled: false
  - name: keycloak
    chart: bitnami/keycloak
    version: 9.2.7
    namespace: localhost
    values:
      - fullnameOverride: keycloak
        auth:
          adminUser: admin
          adminPassword: admin
          managementUser: manager
          managementPassword: manager
        ingress:
          enabled: true
          pathType: Prefix
          ingressClassName: nginx
          hostname: keycloak.localhost
        postgresql:
          enabled: true
          auth:
            password: ololo
        keycloakConfigCli:
          enabled: true
          configuration:
            keycloak-realm-config.json: |
{{ readFile "values/keycloak-realm-config.json" | indent 14 }}
        service:
          type: ClusterIP
  - name: opa
    chart: opa/opa-kube-mgmt
    namespace: localhost
    values:
      - fullnameOverride: opa
        authz:
          enabled: false
        useHttps: false
        logLevel: debug
        port: 80
  - name: application
    chart: ./charts/homework-6
    namespace: default
    recreatePods: true
    needs:
      - kube-system/ingress-nginx
      - default/postgresql
      - localhost/keycloak
      - localhost/opa
    values:
      - withStress: true
        image:
          pullPolicy: Always
          repository: {{ requiredEnv "IMAGE" }}
          tag: latest
        ingress:
          enabled: true
          className: "nginx"
          hosts:
            - host: localhost
              paths:
                - path: "/"
                  pathType: Prefix
          # annotations:
            # nginx.ingress.kubernetes.io/auth-url: "http://$host/oauth2/auth" # for oauth2proxy 
            # nginx.ingress.kubernetes.io/auth-signin: "http://localhost/oauth2/start?rd=$escaped_request_uri" # for oauth2proxy 
            # nginx.ingress.kubernetes.io/configuration-snippet: | 
            #   auth_request_set $name_upstream_authorization $upstream_http_authorization;
            #   # forward the authorization header from the auth request in the X-OAUTH2-PROXY-ID-TOKEN header
            #   proxy_set_header X-OAUTH2-PROXY-ID-TOKEN $name_upstream_authorization;

            #   auth_request_set $name_upstream_1 $upstream_cookie__oauth2_proxy_1;

            #   access_by_lua_block {
            #     if ngx.var.name_upstream_1 ~= "" then
            #       ngx.header["Set-Cookie"] = "_oauth2_proxy_1=" .. ngx.var.name_upstream_1 .. ngx.var.auth_cookie:match("(; .*)")
            #     end
            #   }

            #   if ($scheme = https) {
            #     add_header  Strict-Transport-Security "max-age=0;";
            #   }
        env:
          - name: DATABASE_USER
            value: postgres
          - name: DATABASE_PASSWORD
            value: "ololo"
          - name: DATABASE_URL
            value: postgresql://$(DATABASE_USER):$(DATABASE_PASSWORD)@db:5432/homework
  - name: oauth2-proxy
    chart: oauth2-proxy/oauth2-proxy
    version: ~6.2.0
    namespace: default
    installed: false
    needs:
      - default/application
      - kube-system/ingress-nginx
    values:
      - values/oauth2proxy.yaml