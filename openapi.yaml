openapi: 3.0.0
info:
  contact:
    email: schetinnikov@gmail.com
  description: |
    This is simple client API
  title: User Service
  version: 1.0.0
servers:
- description: Example Server
  url: http://example.domain/api/v1/
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/otus55/users/1.0.0
tags:
- description: Operations about user
  name: user
paths:
  /user:
    post:
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        content:
          application/json:
            examples:
              sample-user:
                summary: Example
                value:
                  username: johndoe589
                  firstName: John
                  lastName: Doe
                  email: bestjohn@doe.com
                  phone: +71002003040
            schema:
              $ref: '#/components/schemas/User'
        description: Created user object
        required: true
      responses:
        default:
          description: successful operation
      summary: Create user
      tags:
      - user
  /user/{userId}:
    delete:
      description: deletes a single user based on the ID supplied
      operationId: deleteUser
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: user deleted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      tags:
      - user
    get:
      description: Returns a user based on a single ID, if the user does not have
        access to the user
      operationId: find user by id
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: user response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      tags:
      - user
    put:
      description: Update user with User ID supplied
      operationId: updateUser
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              sample-user:
                summary: Example
                value:
                  firstName: Julie
                  lastName: Doe
                  email: bestjohn@doe.com
                  phone: +71004242424
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: user updated
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      tags:
      - user
components:
  requestBodies:
    UserArray:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/User'
            type: array
      description: List of user object
      required: true
  schemas:
    User:
      example:
        firstName: firstName
        lastName: lastName
        phone: phone
        id: 0
        email: email
        username: username
      properties:
        id:
          format: int64
          title: id
          type: integer
        username:
          maxLength: 256
          title: username
          type: string
        firstName:
          title: firstName
          type: string
        lastName:
          title: lastName
          type: string
        email:
          format: email
          title: email
          type: string
        phone:
          format: phone
          title: phone
          type: string
      title: User
      type: object
    Error:
      properties:
        code:
          format: int32
          title: code
          type: integer
        message:
          title: message
          type: string
      required:
      - code
      - message
      title: Error
      type: object
